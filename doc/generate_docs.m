% Sweep through the folders and auto-generate documentation for each file:
% HTML and LATEX(*)
% 
% (*)can be included by doc.tex to put this nicely into a pdf file
%
% Copyright (C) 2008-2013 by Marc Deisenroth, Andrew McHutchon, Joe Hall,
% and Carl Edward Rasmussen.
%
% Last modified: 2013-05-26

clear all; close all

docFormats = {'latex', 'html'};
styles = {'m2doctex.xsl', ''};


RootDir = '../';
outputDir{1} = [RootDir 'doc/tex/'];
outputDir{2} = [RootDir 'doc/html/'];



files = {
  '../base/applyController.m', ...                                % base folder
  '../base/calcCost.m', ...
  '../base/pred.m',...
  '../base/predcost.m', ...
  '../base/propagate.m', ...
  '../base/propagated.m', ...
  '../base/rollout.m', ...
  '../base/simulate.m', ...
  '../base/trainDynModel.m', ...
  '../base/value.m', ...
  '../control/conCat.m', ...                                   % control folder
  '../control/congp.m', ...
  '../control/conlin.m', ...
  '../gp/covNoise.m', ...                                           % gp folder
  '../gp/covSEard.m', ...
  '../gp/covSum.m', ...
  '../gp/fitc.m',...
  '../gp/gp0d.m', ...
  '../gp/gp0.m', ...
  '../gp/gp1d.m', ...
  '../gp/gp1.m', ...
  '../gp/gp2d.m', ...
  '../gp/gp2.m', ...
  '../gp/gpr.m', ...
  '../gp/hypCurb.m', ...
  '../gp/train.m',...
  '../loss/lossAdd.m', ...                                        % loss folder
  '../loss/lossHinge.m', ...
  '../loss/lossLin.m', ...
  '../loss/lossQuad.m', ...
  '../loss/lossSat.m', ...
  '../loss/reward.m', ...
  '../scenarios/cartDoublePendulum/cartDouble_learn.m', ...  % scenarios folder
  '../scenarios/cartDoublePendulum/draw_cdp.m', ...
  '../scenarios/cartDoublePendulum/draw_rollout_cdp.m', ...
  '../scenarios/cartDoublePendulum/dynamics_cdp.m', ...
  '../scenarios/cartDoublePendulum/getPlotDistr_cdp.m', ...
  '../scenarios/cartDoublePendulum/loss_cdp.m', ...
  '../scenarios/cartDoublePendulum/settings_cdp.m', ...
  '../scenarios/cartPole/cartPole_learn.m', ...
  '../scenarios/cartPole/draw_cp.m', ...
  '../scenarios/cartPole/draw_rollout_cp.m', ...
  '../scenarios/cartPole/dynamics_cp.m', ...
  '../scenarios/cartPole/getPlotDistr_cp.m', ...
  '../scenarios/cartPole/loss_cp.m', ...
  '../scenarios/cartPole/settings_cp.m', ...
  '../scenarios/doublePendulum/DoublePend_learn.m', ...
  '../scenarios/doublePendulum/draw_dp.m', ...
  '../scenarios/doublePendulum/draw_rollout_dp.m', ...
  '../scenarios/doublePendulum/dynamics_dp.m', ...
  '../scenarios/doublePendulum/getPlotDistr_dp.m', ...
  '../scenarios/doublePendulum/loss_dp.m', ...
  '../scenarios/doublePendulum/settings_dp.m', ...
  '../scenarios/pendubot/pendubot_learn.m', ...
  '../scenarios/pendubot/draw_pendubot.m', ...
  '../scenarios/pendubot/draw_rollout_pendubot.m', ...
  '../scenarios/pendubot/dynamics_pendubot.m', ...
  '../scenarios/pendubot/getPlotDistr_pendubot.m', ...
  '../scenarios/pendubot/loss_pendubot.m', ...
  '../scenarios/pendubot/settings_pendubot.m', ...
  '../scenarios/pendulum/draw_pendulum.m', ...
  '../scenarios/pendulum/draw_rollout_pendulum.m', ...
  '../scenarios/pendulum/dynamics_pendulum.m', ...
  '../scenarios/pendulum/loss_pendulum.m', ...
  '../scenarios/pendulum/pendulum_learn.m', ...
  '../scenarios/pendulum/settings_pendulum.m', ...
  '../scenarios/unicycle/augment_unicycle.m', ...
  '../scenarios/unicycle/draw_unicycle.m', ...
  '../scenarios/unicycle/draw_rollout_unicycle.m', ...
  '../scenarios/unicycle/dynamics_unicycle.m', ...
  '../scenarios/unicycle/loss_unicycle.m', ...
  '../scenarios/unicycle/settings_unicycle.m', ...
  '../scenarios/unicycle/unicycle_learn.m', ...
  '../test/checkgrad.m', ...                                      % test folder
  '../test/conT.m', ...
  '../test/gpT.m', ...
  '../test/gSinSatT.m', ...
  '../test/gTrigT.m', ...
  '../test/lossT.m', ...
  '../test/propagateT.m', ...
  '../test/valueT.m', ...
  '../util/error_ellipse.m', ...                                  % util folder
   '../util/gaussian.m', ...
   '../util/gSat.m', ...
   '../util/gSin.m', ...
   '../util/gTrig.m', ...
   '../util/maha.m', ...
   '../util/minimize.m', ...
   '../util/rewrap.m', ...
   '../util/unwrap.m', ...
   '../util/solve_chol.m', ...
   '../util/sq_dist.m'
  };

for i = 1:length(docFormats)
  
  % define a new output format
  options = struct('format', docFormats{i}, ...
    'evalCode', false, ...
    'outputDir', outputDir{i}, ...
    'showCode', true, ...
    'stylesheet', styles{i});
  
  fprintf('\rgenerating %s %s\n', docFormats{i}, 'files ...');
  
  
  % sweep through the files
  for j = 1:length(files)
    publish(files{j}, options);
    fprintf('\r%i/%i',j,length(files));
  end
  
end

fprintf('\r done\n');